{"ast":null,"code":"import axios from \"axios\";\nimport createAuthRefreshInterceptor from \"axios-auth-refresh\";\nimport { getAccessToken, getRefreshToken, getUser } from \"../hooks/user.actions\";\nconst axiosService = axios.create({\n  baseURL: process.env.REACT_APP_API_URL,\n  headers: {\n    \"Content-Type\": \"application/json\"\n  }\n});\naxiosService.interceptors.request.use(async config => {\n  /**\n   * Retrieving the access and refresh tokens from the local storage\n   */\n  config.headers.Authorization = `Bearer ${getAccessToken()}`;\n  return config;\n});\naxiosService.interceptors.response.use(res => Promise.resolve(res), err => Promise.reject(err));\nconst refreshAuthLogic = async failedRequest => {\n  return axios.post(\"/auth/refresh/\", {\n    refresh: getRefreshToken()\n  }, {\n    baseURL: process.env.REACT_APP_API_URL\n  }).then(resp => {\n    const {\n      access\n    } = resp.data;\n    failedRequest.response.config.headers[\"Authorization\"] = \"Bearer \" + access;\n    localStorage.setItem(\"auth\", JSON.stringify({\n      access,\n      refresh: getRefreshToken(),\n      user: getUser()\n    }));\n  }).catch(() => {\n    localStorage.removeItem(\"auth\");\n  });\n};\ncreateAuthRefreshInterceptor(axiosService, refreshAuthLogic);\nexport function fetcher(url) {\n  return axiosService.get(url).then(res => res.data);\n}\nexport default axiosService;","map":{"version":3,"names":["axios","createAuthRefreshInterceptor","getAccessToken","getRefreshToken","getUser","axiosService","create","baseURL","process","env","REACT_APP_API_URL","headers","interceptors","request","use","config","Authorization","response","res","Promise","resolve","err","reject","refreshAuthLogic","failedRequest","post","refresh","then","resp","access","data","localStorage","setItem","JSON","stringify","user","catch","removeItem","fetcher","url","get"],"sources":["/home/neo/Рабочий стол/python_pro/django_and_drf/hard/app_02/front/src/helpers/axios.js"],"sourcesContent":["import axios from \"axios\";\nimport createAuthRefreshInterceptor from \"axios-auth-refresh\";\nimport {\n  getAccessToken,\n  getRefreshToken,\n  getUser,\n} from \"../hooks/user.actions\";\n\nconst axiosService = axios.create({\n  baseURL: process.env.REACT_APP_API_URL,\n  headers: {\n    \"Content-Type\": \"application/json\",\n  },\n});\n\naxiosService.interceptors.request.use(async (config) => {\n  /**\n   * Retrieving the access and refresh tokens from the local storage\n   */\n  config.headers.Authorization = `Bearer ${getAccessToken()}`;\n  return config;\n});\n\naxiosService.interceptors.response.use(\n  (res) => Promise.resolve(res),\n  (err) => Promise.reject(err)\n);\n\nconst refreshAuthLogic = async (failedRequest) => {\n  return axios\n    .post(\n      \"/auth/refresh/\",\n      {\n        refresh: getRefreshToken(),\n      },\n      {\n        baseURL: process.env.REACT_APP_API_URL,\n      }\n    )\n    .then((resp) => {\n      const { access } = resp.data;\n      failedRequest.response.config.headers[\"Authorization\"] =\n        \"Bearer \" + access;\n      localStorage.setItem(\n        \"auth\",\n        JSON.stringify({ access, refresh: getRefreshToken(), user: getUser() })\n      );\n    })\n    .catch(() => {\n      localStorage.removeItem(\"auth\");\n    });\n};\n\ncreateAuthRefreshInterceptor(axiosService, refreshAuthLogic);\n\nexport function fetcher(url) {\n  return axiosService.get(url).then((res) => res.data);\n}\n\nexport default axiosService;\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,4BAA4B,MAAM,oBAAoB;AAC7D,SACEC,cAAc,EACdC,eAAe,EACfC,OAAO,QACF,uBAAuB;AAE9B,MAAMC,YAAY,GAAGL,KAAK,CAACM,MAAM,CAAC;EAChCC,OAAO,EAAEC,OAAO,CAACC,GAAG,CAACC,iBAAiB;EACtCC,OAAO,EAAE;IACP,cAAc,EAAE;EAClB;AACF,CAAC,CAAC;AAEFN,YAAY,CAACO,YAAY,CAACC,OAAO,CAACC,GAAG,CAAC,MAAOC,MAAM,IAAK;EACtD;AACF;AACA;EACEA,MAAM,CAACJ,OAAO,CAACK,aAAa,GAAI,UAASd,cAAc,CAAC,CAAE,EAAC;EAC3D,OAAOa,MAAM;AACf,CAAC,CAAC;AAEFV,YAAY,CAACO,YAAY,CAACK,QAAQ,CAACH,GAAG,CACnCI,GAAG,IAAKC,OAAO,CAACC,OAAO,CAACF,GAAG,CAAC,EAC5BG,GAAG,IAAKF,OAAO,CAACG,MAAM,CAACD,GAAG,CAC7B,CAAC;AAED,MAAME,gBAAgB,GAAG,MAAOC,aAAa,IAAK;EAChD,OAAOxB,KAAK,CACTyB,IAAI,CACH,gBAAgB,EAChB;IACEC,OAAO,EAAEvB,eAAe,CAAC;EAC3B,CAAC,EACD;IACEI,OAAO,EAAEC,OAAO,CAACC,GAAG,CAACC;EACvB,CACF,CAAC,CACAiB,IAAI,CAAEC,IAAI,IAAK;IACd,MAAM;MAAEC;IAAO,CAAC,GAAGD,IAAI,CAACE,IAAI;IAC5BN,aAAa,CAACP,QAAQ,CAACF,MAAM,CAACJ,OAAO,CAAC,eAAe,CAAC,GACpD,SAAS,GAAGkB,MAAM;IACpBE,YAAY,CAACC,OAAO,CAClB,MAAM,EACNC,IAAI,CAACC,SAAS,CAAC;MAAEL,MAAM;MAAEH,OAAO,EAAEvB,eAAe,CAAC,CAAC;MAAEgC,IAAI,EAAE/B,OAAO,CAAC;IAAE,CAAC,CACxE,CAAC;EACH,CAAC,CAAC,CACDgC,KAAK,CAAC,MAAM;IACXL,YAAY,CAACM,UAAU,CAAC,MAAM,CAAC;EACjC,CAAC,CAAC;AACN,CAAC;AAEDpC,4BAA4B,CAACI,YAAY,EAAEkB,gBAAgB,CAAC;AAE5D,OAAO,SAASe,OAAOA,CAACC,GAAG,EAAE;EAC3B,OAAOlC,YAAY,CAACmC,GAAG,CAACD,GAAG,CAAC,CAACZ,IAAI,CAAET,GAAG,IAAKA,GAAG,CAACY,IAAI,CAAC;AACtD;AAEA,eAAezB,YAAY"},"metadata":{},"sourceType":"module","externalDependencies":[]}